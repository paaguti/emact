#
#	@(#)	EmACT	(c) by Christian Jullien	2009/04/29
#
# Optional flags :
#
#	-D_MLISP	     to use with user defined macros.
#	-D_UNICODE	     to use with UNICODE characters.
#	

# set CPU from $(CC) version found in path.
!if [$(CC) 2>&1 | find "x86" > nul] == 0
CPU		= i386
!elseif [$(CC) 2>&1 | find "x64" > nul] == 0
CPU		= AMD64
!elseif [$(CC) 2>&1 | find "Itanium" > nul] == 0
CPU		= IA64
!elseif [$(CC) 2>&1 | find "ARM" > nul] == 0
CPU		= ARM
!else
CPU		= i386
!endif

!message Compiling using $(CC) for $(CPU) cpu.

#	Assumes that we have <install-dir>\openlisp

LIBFILES	=

!if "$(CPU)" == "AMD64"
CPUFLAG 	= -GS- -D_SECURE_SCL=0
ARCH		= 64
LDARCH		= AMD64
HC		= if exist ..\hc\hcrtf ..\hc\hcrtf -xn
LIBEXTRA	= # bufferoverflowU.lib
!endif

!if "$(CPU)" == "i386"
CPUFLAG 	= # -Wp64 # (G4=486, G5=Pentium, G6=PPro, G7=Pentium4)
ARCH		= 32
LDARCH		= x86
HC		= if exist ..\hc\hcrtf ..\hc\hcrtf -xn
!endif

!if "$(CHARSET)" == "_WIDECHARS"
CHARLIB		= u
STARTUP		= -subsystem:windows -entry:wWinMainCRTStartup
UNICODE		= -D_WIDECHARS
SETARGV		= wsetargv.obj
!else
CHARLIB		= a
STARTUP		= -subsystem:windows -entry:WinMainCRTStartup
UNICODE		=
SETARGV		= setargv.obj
!endif

OLFLAGS		= -D_MLISP
OLLIB		=
EMLISP		= MLisp.obj

CC		= cl -nologo
AR		= lib
ARFLAG		= -nologo
SED		= emsed
MFLAGS		= -D_WIN$(ARCH) $(UNICODE)
CFLAGS		= $(MFLAGS) -EHsc -MT -Gs -Od $(CPUFLAG) -Zi -W4 -WL -I. $(OLFLAGS)
EMACSLIB	= emmt$(CHARLIB)$(ARCH).lib
EMACSBIN	= emacsxp$(CHARLIB)-$(CPU)
LDFLAGS		= -link /PDB:$(EMACSBIN).pdb $(STARTUP) # -opt:REF -opt:ICF=8
LIBS		= $(SETARGV)	\
		  gdi32.lib	\
		  comctl32.lib	\
		  shell32.lib	\
		  user32.lib	\
		  advapi32.lib	\
		  kernel32.lib	\
		  wsock32.lib	\
		  comdlg32.lib  \
		  $(LIBEXTRA)

KERNEL		= \
		  Buffer.obj	 \
		  charutil.obj	 \
		  Completion.obj \
		  dirent.obj	 \
                  Editor.obj	 \
		  EditWindow.obj \
		  emacs.obj	 \
		  Error.obj	 \
		  file.obj	 \
		  fileio.obj	 \
		  indent.obj	 \
		  KillBuf.obj	 \
		  Line.obj	 \
		  main.obj	 \
		  MiniBuf.obj	 \
		  Options.obj	 \
		  Process.obj	 \
		  Redisplay.obj	 \
		  Search.obj	 \
		  Terminal.obj	 \
		  TextRegion.obj \
		  unicode.obj	 \
		  Version.obj	 \
		  Word.obj

LISPOBJECTS	= MLisp.obj

TERMINAL	= xpterm.obj

ALLOBJECTS	= $(KERNEL)	\
		  $(LISPOBJECTS)\
		  $(TERMINAL)

OBJECTS		= $(KERNEL)	\
		  $(EMLISP)	\
		  $(TERMINAL)

all:	ed.exe emacs.hlp $(EMACSLIB)

ed.exe:	$(ALLOBJECTS) xpterm.res
	@$(CC) -Zi -Feed.exe $(OBJECTS) xpterm.res $(OLLIB) $(LIBS) $(LDFLAGS)
	@del xpterm.res > nul

unicode:
	@$(MAKE) -nologo -f makefile.xp CHARSET=_WIDECHARS

#	EmACT library

$(EMACSLIB):	$(OBJECTS)
	@echo Building $(EMACSLIB) ..
	@if exist $(EMACSLIB) del $(EMACSLIB) > nul
	@$(AR) -out:$(EMACSLIB) $(ARFLAG) $(OBJECTS)

#	Resource file

xpterm.res: xpterm.rc xpterm.h winterm0.ico
	@rc -r $(MFLAGS) -fo xpterm.res xpterm.rc

#	Help file

emacs.hlp: emacs.rtf emacs.hpj
	-@$(HC) emacs

.cpp.obj:
	@$(CC) -c $(CFLAGS) $<
